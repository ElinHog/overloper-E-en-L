  let aantalLevens= 1;

  var rodeAppel = {
  x: 300,
  y: 450,
  sprite: 0,
  opgepakt: false, // appel is nog niet opgepakt als het spel begint
  toon() {
        if (!this.opgepakt) {
            image(this.sprite, this.x, this.y, raster.celGrootte, raster.celGrootte);
        } // laat de appel zien als hij nog niet is opgepakt
   }
};

var groeneAppel = {
    x: 350,
    y: 400,
    straal: 25,
    sprite: 0,
    opgepakt: false,
    snelheidX: 4,
    snelheidY: 4,
    demping: 0.9,
   
 
    beweeg() {
       
        this.x += this.snelheidX;
        this.y += this.snelheidY;
     
// Kijken of de appel de randen raakt
        if (this.x <= this.straal || this.x >= canvas.width - this.straal) {
            this.snelheidX *= -this.demping;
        } // stuiteren

        if (this.y <= this.straal || this.y >= canvas.height - this.straal) {
            this.snelheidY *= -this.demping;
        }
    }, // stuiteren
   
   toon() {
        if (!this.opgepakt) {
            image(this.sprite, this.x, this.y, raster.celGrootte, raster.celGrootte);
        } // laat de appel zien als hij nog niet is opgepakt
   }
};
 
class Raster {
  constructor(r,k) {
    this.aantalRijen = r;
    this.aantalKolommen = k;
    this.celGrootte = null;
  }
 
  berekenCelGrootte() {
    this.celGrootte = canvas.width / this.aantalKolommen;
  }
 
  teken() {
    push();
    noFill();
    stroke('grey');
    for (var rij = 0;rij < this.aantalRijen;rij++) {
      for (var kolom = 0;kolom < this.aantalKolommen;kolom++) {
        rect(kolom*this.celGrootte,rij*this.celGrootte,this.celGrootte,this.celGrootte);
      }
    }
    pop();
  }
}

class Jos {
  constructor() {
    this.x = 400;
    this.y = 300;
    this.animatie = [];
    this.frameNummer =  3;
    this.stapGrootte = null;
    this.gehaald = false; // jos heeft nog niet de overkant gehaald als het spel begint
    this.breedte = raster.celGrootte;
    this.hoogte = raster.celGrootte;
  }
 
  beweeg() {
    if (keyIsDown(65)) { // letter a op de keybord
      this.x -= this.stapGrootte;
      this.frameNummer = 2;
    }
    if (keyIsDown(68)) { // letter d op de keybord
      this.x += this.stapGrootte;
      this.frameNummer = 1;
    }
    if (keyIsDown(87)) { // letter w op de keybord
      this.y -= this.stapGrootte;
      this.frameNummer = 4;
    }
    if (keyIsDown(83)) { // letter s op de keybord
      this.y += this.stapGrootte;
      this.frameNummer = 5;
    }
   
    this.x = constrain(this.x,0,canvas.width);
    this.y = constrain(this.y,0,canvas.height - raster.celGrootte);
   
    if (this.x == canvas.width) {
      this.gehaald = true;
    }
  }

    wordtGeraakt(vijand) {
    if (this.x == vijand.x && this.y == vijand.y) {
      return true;
    }
    else {
      return false;
    }
  }
 
  wordtGeraaktBom(bom) {
    return (
        this.x < bom.x + bom.breedte &&
        this.x + this.breedte > bom.x &&
        this.y < bom.y + bom.hoogte &&
        this.y + this.hoogte > bom.y
    );
}
 
   
 
eetAppel(appel) {
    return (
    this.x < appel.x + raster.celGrootte &&
    this.x + this.breedte > appel.x &&
    this.y < appel.y + raster.celGrootte &&
    this.y + this.hoogte > appel.y
    );
}
 
  toon() {
    image(this.animatie[this.frameNummer],this.x,this.y,raster.celGrootte,raster.celGrootte);
  }
}  

class Vijand {
  constructor(x,y) {
    this.x = x;
    this.y = y;
    this.sprite = null;
    this.stapGrootte = null;
    this.breedte = raster.celGrootte;
    this.hoogte = raster.celGrootte;
  }

  beweeg() {
    this.x += floor(random(-1,2))*this.stapGrootte;
    this.y += floor(random(-1,2))*this.stapGrootte;

    this.x = constrain(this.x,0,canvas.width - raster.celGrootte);
    this.y = constrain(this.y,0,canvas.height - raster.celGrootte);
  }
 
  toon() {
    image(this.sprite,this.x,this.y,raster.celGrootte,raster.celGrootte);
  }
}

class Bom {
  constructor(sn) {
    this.x = random(450,900); // begin op een random plek
    this.y = random(0,600); // begin op een random plek
    this.breedte = raster.celGrootte/2;
    this.hoogte = raster.celGrootte/2;
    this.snelheid = sn; // snelheid verschil dus per bom. Wordt later aangegeven hoe snel
    this.opgepakt =  false;
    this.sprite = null;
    this.stapGrootte = 1*eve.stapGrootte;
   
  }
 
    beweeg() {
    this.y += this.snelheid;
   
  if (this.y >= canvas.height - raster.celGrootte) {
      this.y = canvas.height - raster.celGrootte;
      this.snelheid *= -1; // als de onderkant is behaald stuiterd de bom terug
    }

      if (this.y <= 0) {
      this.y = 0;
      this.snelheid *= -1;  // als de bovenkant is behaald suiterd de bom terug
    }
  }
 
 toon() {
        if (!this.opgepakt) {
            image(this.sprite, this.x, this.y, raster.celGrootte, raster.celGrootte);
        }
   }
  }

function preload() {
  brug = loadImage("images/backgrounds/dame_op_brug_1800.jpg");
  rodeAppel.sprite = loadImage("images/sprites/appel_2.png");
  groeneAppel.sprite = loadImage("images/sprites/appel_1.png");
  onderwater =
    loadImage("images/backgrounds/onderwater.png");
}

function setup() {
  canvas = createCanvas(900,600);
  canvas.parent();
  frameRate(10);
  textFont("Verdana");
  textSize(20);
 
  raster = new Raster(12,18);
 
  raster.berekenCelGrootte();
 
  eve = new Jos();
  eve.stapGrootte = 1*raster.celGrootte;
  for (var b = 0;b < 6;b++) {
    frameEve = loadImage("images/sprites/Eve100px/Eve_" + b + ".png");
    eve.animatie.push(frameEve);
  }
 
  alice = new Vijand(700,200);
  alice.stapGrootte = 1*eve.stapGrootte;
  alice.sprite = loadImage("images/sprites/Alice100px/Alice.png");

  bob = new Vijand(600,400);
  bob.stapGrootte = 1*eve.stapGrootte;
  bob.sprite = loadImage("images/sprites/Bob100px/Bob.png");  

  Bom1 = new Bom(8); // de bommen met veschillende snelheden
  Bom1.sprite = loadImage("images/sprites/bom.png");
 
  Bom2 = new Bom(9);
  Bom2.sprite = loadImage("images/sprites/bom.png");
 
  Bom3 = new Bom(2);
  Bom3.sprite = loadImage("images/sprites/bom.png");
 
  Bom4 = new Bom(6);
  Bom4.sprite = loadImage("images/sprites/bom.png");
 
  Bom5 = new Bom(5);
  Bom5.sprite = loadImage("images/sprites/bom.png");
}

function draw() {
  background(brug);
      for (var rij = 0;rij < 900;rij += 50) {
    for (var kolom = 0;kolom < 900;kolom += 50) {
      if (rij == 300 || kolom == 400) {
        fill('orange'); // maak de oranje kolommen
      }
        else {
        noFill();
      }
      rect(kolom,rij,50,50);
    }
   }
 
    let inOranjeVak = false;
   if ((mouseX >= 0 && mouseY >= 300 && mouseY < 350) ||  // kolom 1
        (mouseX >= 400 && mouseX < 450 && mouseY >= 0 )) { // kolom 2
        inOranjeVak = true;
    }

    // Verander de achtergrond als de muis op de oranje stukken is
    if (inOranjeVak) {
        background(onderwater); // gekozen voor een donkere achtergrond zodat de bommen minder zichtbaar zijn en het spel wat lastiger is
    }

  raster.teken();
  eve.beweeg();
  alice.beweeg();
  bob.beweeg();
  eve.toon();
  alice.toon();
  bob.toon();
 
  Bom1.toon();
  Bom1.beweeg();
  Bom2.toon();
  Bom2.beweeg();
  Bom3.toon();
  Bom3.beweeg();
  Bom4.toon();
  Bom4.beweeg();
  Bom5.toon();
  Bom5.beweeg();
 
  rodeAppel.toon();
  groeneAppel.beweeg();
  groeneAppel.toon();
 
     fill('grey');
  text("Aantal levens = " + aantalLevens +".",30,30); // laat het aantal levens zien boven in de hoek
 
  if (eve.wordtGeraakt(alice) || eve.wordtGeraakt(bob)) {
    aantalLevens --;
  }
 
   if (eve.wordtGeraaktBom(Bom1) && !Bom1.opgepakt) {
    Bom1.opgepakt = true;
    aantalLevens--;
  }
 
  if (eve.wordtGeraaktBom(Bom2) && !Bom2.opgepakt) {
    Bom2.opgepakt = true;
    aantalLevens--;
  }
 
  if (eve.wordtGeraaktBom(Bom3) && !Bom3.opgepakt) {
    Bom3.opgepakt = true;
    aantalLevens--;
  }
 
  if (eve.wordtGeraaktBom(Bom4) && !Bom4.opgepakt) {
    Bom4.opgepakt = true;
    aantalLevens--;
  }
 
  if (eve.wordtGeraaktBom(Bom5) && !Bom5.opgepakt) {
    Bom5.opgepakt = true;
    aantalLevens--;
  }
 
 
 
  if (eve.eetAppel(rodeAppel) && !rodeAppel.opgepakt) {
        rodeAppel.opgepakt = true; // als eve de rode appel aanraakt gaat hij weg
        aantalLevens++; // als eve de rode appel aanraakt krijt ze er een leven bij
    }

  if (eve.eetAppel(groeneAppel) && !groeneAppel.opgepakt) {
        groeneAppel.opgepakt = true; // als eve de groene appel aanraakt gaat hij weg
        aantalLevens++; // als eve de groene appel aanraakt krijt ze er een leven bij
    }
 
  if (aantalLevens < 1) {
    background('red');
    fill('white');
    text("Je hebt verloren!",300,300);
    noLoop ();
  } // als de levens op zijn wordt het scherm rood en staat er "je hebt verloren"
   
 
  if (eve.gehaald) {
    background('green');
    fill('white');
    text("Je hebt gewonnen!",300,300);
    noLoop();
  } // als eve de overkant heeft gehaal wordt het scherm groen en staat er "je hebt gewonnen"
}
